plugins {
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.97'
}

apply from: 'https://raw.githubusercontent.com/Crimix/bml/1.20.4/common.gradle'
apply from: 'https://raw.githubusercontent.com/Crimix/bml/1.20.4/shadow.gradle'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
// Default run configurations.
// These can be tweaked, removed, or duplicated as needed.
runs {
    // applies to all the run configs below
    configureEach {
        workingDirectory project.file('run')

        // Recommended logging data for a userdev environment
        // The markers can be added/remove as needed separated by commas.
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        // You can set various levels here.
        // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
        systemProperty 'forge.logging.console.level', 'debug'

        systemProperty 'mixin.env.disableRefMap', 'true'

        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', mod_id

        modSource project.sourceSets.main
    }

    client {
    }

    server {
    }

    // This run config launches GameTestServer and runs all registered gametests, then exits.
    // By default, the server will crash when no gametests are provided.
    // The gametest system is also enabled by default for other run configs under the /test command.
    gameTestServer {
    }

    data {
        // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/main/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/crimix/bml")
        credentials {
            username = github_user
            password = github_token
        }
        content {
            includeGroup "com.black_dog20.bml"
        }
    }
    mavenLocal()
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    implementation "curse.maven:jade-324717:${jade_version}"
    shadowCompileOnly "com.black_dog20.bml:bml:${bml_version}"
    localRuntime "com.black_dog20.bml:bml:${bml_version}"
}

jar {
    manifest {
        attributes(["Specification-Title": "servertabinfo",
                    "Specification-Vendor": "black_dog20",
                    "Specification-Version": "1",  // We are version 1 of ourselves
                    "Implementation-Title": "Server Tab Info",
                    "Implementation-Version": archiveVersion.get(),
                    "Implementation-Vendor" :"black_dog20",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

shadowJar {
    configurations = [project.configurations.shadowCompileOnly]
    relocate 'com.black_dog20.bml', 'com.black_dog20.servertabinfo.repack.bml'
}

curseforge {
    apiKey = curse_apiKey
    project {
        id = '291788'
        changelogType = 'markdown'
        changelog = "As always find the changelog here [CHANGELOG](${changelog_url})"
        releaseType = 'release'
        addGameVersion 'NeoForge'
        addGameVersion 'Java 17'
        addGameVersion '1.20.4'
        relations {
            optionalDependency 'permission-levels'
        }
    }
}

modrinth {
    token = modrinth_token
    projectId = "VZptDEBF"
    uploadFile = jar
    versionNumber = "${mc_version}-${version}"
    changelog = "As always find the changelog here [CHANGELOG](${changelog_url})"
    versionType = "release"
    loaders = ["neoforge"]
    gameVersions = ["1.20.4"]
    dependencies {
        optional.project "liHwiCTl"
    }
}
